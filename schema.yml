openapi: 3.0.3
info:
  title: The EVENT MANAGER TEST APP
  version: 0.0.0
  description: API for the event manager app.
paths:
  /accounts/api/register/:
    post:
      operationId: accounts_api_register_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /accounts/api/token/login/:
    post:
      operationId: accounts_api_token_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /accounts/api/token/refresh/:
    post:
      operationId: accounts_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /events/api/create_event/:
    post:
      operationId: events_api_create_event_create
      description: 'POST: Creates Event.'
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateEvent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEvent'
          description: ''
  /events/api/delete_event/{id}/:
    delete:
      operationId: events_api_delete_event_destroy
      description: 'DELETE: Destroys the event created by the particular user.'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /events/api/list/user_events/:
    get:
      operationId: events_api_list_user_events_list
      description: 'GET: Retrieves all events of the particular user.'
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
  /events/api/list_events/:
    get:
      operationId: events_api_list_events_list
      description: |-
        GET: Retrieves all events.
        Usage: Adding parameter ?registration_end_date to endpoint filters the last day of registration.
        For example, if registration end date is 2023-10-9,
        then appears all events with deadline of 2023-10-9 and earlier.
        The same principe for ?participants_quantity.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: participants_quantity
        schema:
          type: number
      - in: query
        name: registration_end_date
        schema:
          type: string
          format: date
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
  /events/api/register_for_event/:
    post:
      operationId: events_api_register_for_event_create
      description: |-
        Register user to the event.
        Note: The owner of the event can not be registered.
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventAttendance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAttendance'
          description: ''
  /events/api/unregister_from_event/{id}:
    delete:
      operationId: events_api_unregister_from_event_destroy
      description: 'DELETE: Unregisters user from the event.'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /events/api/update_event/{id}/:
    patch:
      operationId: events_api_update_event_partial_update
      description: |-
        PATCH: Updates particular event.
        NOTE: Only Owner of the event can update the object.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    CreateEvent:
      type: object
      properties:
        title:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
          maxLength: 255
        registration_end_date:
          type: string
          format: date
        max_participants_capacity:
          type: integer
      required:
      - max_participants_capacity
      - registration_end_date
      - title
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
          maxLength: 255
        registration_end_date:
          type: string
          format: date
        max_participants_capacity:
          type: integer
        occupied_capacity:
          type: integer
      required:
      - id
      - max_participants_capacity
      - registration_end_date
      - title
    EventAttendance:
      type: object
      properties:
        event_id:
          type: integer
          minimum: 0
      required:
      - event_id
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
          maxLength: 255
        registration_end_date:
          type: string
          format: date
        max_participants_capacity:
          type: integer
        occupied_capacity:
          type: integer
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        repeat_password:
          type: string
          writeOnly: true
      required:
      - password
      - repeat_password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
